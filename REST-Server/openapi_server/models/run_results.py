# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class RunResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config=None, status=None, output=None, auth_required=None, timestamp=None):  # noqa: E501
        """RunResults - a model defined in OpenAPI

        :param config: The config of this RunResults.  # noqa: E501
        :type config: ModelConfig
        :param status: The status of this RunResults.  # noqa: E501
        :type status: str
        :param output: The output of this RunResults.  # noqa: E501
        :type output: str
        :param auth_required: The auth_required of this RunResults.  # noqa: E501
        :type auth_required: bool
        :param timestamp: The timestamp of this RunResults.  # noqa: E501
        :type timestamp: int
        """
        self.openapi_types = {
            'config': ModelConfig,
            'status': str,
            'output': str,
            'auth_required': bool,
            'timestamp': int
        }

        self.attribute_map = {
            'config': 'config',
            'status': 'status',
            'output': 'output',
            'auth_required': 'auth_required',
            'timestamp': 'timestamp'
        }

        self._config = config
        self._status = status
        self._output = output
        self._auth_required = auth_required
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'RunResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RunResults of this RunResults.  # noqa: E501
        :rtype: RunResults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this RunResults.


        :return: The config of this RunResults.
        :rtype: ModelConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this RunResults.


        :param config: The config of this RunResults.
        :type config: ModelConfig
        """
        if config is None:
            raise ValueError("Invalid value for `config`, must not be `None`")  # noqa: E501

        self._config = config

    @property
    def status(self):
        """Gets the status of this RunResults.


        :return: The status of this RunResults.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RunResults.


        :param status: The status of this RunResults.
        :type status: str
        """
        allowed_values = ["SUCCESS", "FAIL", "PENDING"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def output(self):
        """Gets the output of this RunResults.

        URI for accessing output (for example, on S3)  # noqa: E501

        :return: The output of this RunResults.
        :rtype: str
        """
        return self._output

    @output.setter
    def output(self, output):
        """Sets the output of this RunResults.

        URI for accessing output (for example, on S3)  # noqa: E501

        :param output: The output of this RunResults.
        :type output: str
        """
        if output is None:
            raise ValueError("Invalid value for `output`, must not be `None`")  # noqa: E501

        self._output = output

    @property
    def auth_required(self):
        """Gets the auth_required of this RunResults.

        Does accessing this model output require authentification? True if requires auth.  # noqa: E501

        :return: The auth_required of this RunResults.
        :rtype: bool
        """
        return self._auth_required

    @auth_required.setter
    def auth_required(self, auth_required):
        """Sets the auth_required of this RunResults.

        Does accessing this model output require authentification? True if requires auth.  # noqa: E501

        :param auth_required: The auth_required of this RunResults.
        :type auth_required: bool
        """

        self._auth_required = auth_required

    @property
    def timestamp(self):
        """Gets the timestamp of this RunResults.

        Epoch timestamp when the model run was initiated (epoch time UTC)  # noqa: E501

        :return: The timestamp of this RunResults.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this RunResults.

        Epoch timestamp when the model run was initiated (epoch time UTC)  # noqa: E501

        :param timestamp: The timestamp of this RunResults.
        :type timestamp: int
        """

        self._timestamp = timestamp
